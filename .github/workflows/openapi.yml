# This workflow generates the OpenAPI docs
name: Generate OpenAPI Documentation

on:
  workflow_call:
  workflow_dispatch:

jobs:
  generate_openapi:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write    

    steps:
    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

    - name: Set up Python 3.12
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5
      with:
        python-version: "3.12" 

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Configure Poetry
      run: |
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        poetry install

    - name: Generate OpenAPI JSON
      run: |
        poetry run generate-openapi > api/openapi.json

    - name: Check if OpenAPI changed
      id: check-openapi
      run: |
          if ! git diff --quiet api/openapi.json ; then
              echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi      

    - name: Set git config
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
    
    - name: Generate PR if needed
      if: steps.check-openapi.outputs.changed == 'true'
      run: |
        git checkout -b update-openapi-$GITHUB_SHA

        git add api/openapi.json
        git commit -m "Update OpenAPI to version generated from ref $GITHUB_SHA"

        echo "Pushing branch so we can create a PR..."
        git push --set-upstream origin update-openapi-$GITHUB_SHA

        gh pr create --title "Update OpenAPI" \
          --body "This PR updates the OpenAPI definition to the version generated from ref $GITHUB_SHA" \
          --repo "$GITHUB_REPOSITORY" \
          --base main \
          --head update-openapi-$GITHUB_SHA
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}        
